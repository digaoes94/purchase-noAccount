package general;

import java.text.ParseException;

import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.Scanner;

public class Main {
	public static Scanner scan = new Scanner(System.in);
	
	public static void main(String args[]) throws ParseException {
		//  System.out.println("");
		
		boolean ativo = true;
		
		System.out.println("Compra - Cliente sem conta");
		System.out.println("Fazer cadastro básico");
		System.out.print("Informe seu nome: ");
		String clienteNome = scan.nextLine();
		System.out.print("Informe seu email: ");
		String clienteEmail = scan.nextLine();
		
		
		Cliente cliente = new Cliente(clienteNome, clienteEmail);
		PedidoStatus status = PedidoStatus.AGUARDANDO_PAGAMENTO;
		Pedido pedido = new Pedido(status, cliente);
		
		do {
			ativo = menu(pedido);
		} while (ativo == true);
		
		scan.close();
	}
	
	public static boolean menu(Pedido pedido) {
		int procedimento = 0;
		boolean cont = true;
		
		System.out.println("Qual procedimento deseja fazer? Informe o número do procedimento");
		System.out.println("1 - Adicionar item ao pedido");
		System.out.println("2 - Remover item do pedido");
		System.out.println("3 - Ver situação do pedido");
		System.out.println("4 - Concluir pedido");
		System.out.println("5 - Sair");
		
		procedimento = scan.nextInt();
		
		switch (procedimento) {
			case 1:
				pedido.AdicionarItem(new PedidoItem());
				cont = true;
				break;
			case 2:
				pedido.RemoverItem();
				cont = true;
				break;
			case 3:
				System.out.println(pedido.toString());
				cont = true;
				break;
			case 4:
				pedido.setMomentoFormatado();
				System.out.println(pedido.PedidoFinalizado());
				cont = true;
				break;
			case 5:
				System.out.println("O programa será encerrado.");
				cont = false;
				break;
			default:
				System.out.println("Número inválido, o programa será encerrado.");
				cont = false;
		}
		
		return cont;
	}
}
